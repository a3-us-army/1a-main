<!DOCTYPE html>
<html>
  <head>
    <title>VPS Status</title>
    <meta content="1A Website" property="og:title" />
    <meta content="Welcome to 1A!" property="og:description" />
    <meta content="https://1a75.org/vps-status" property="og:url" />
    <meta content="https://cdn.xanderxx.xyz/1a-logo.png" property="og:image" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/custom.css" />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css"
    />
    <style>
      .status-table th,
      .status-table td {
        color: #fff;
        background: #23272f;
      }
      .status-table th {
        background: #181a1b;
      }
      .usage-high {
        color: #e74c3c;
        font-weight: bold;
      }
      .usage-medium {
        color: #f39c12;
        font-weight: bold;
      }
      .usage-low {
        color: #27ae60;
        font-weight: bold;
      }
      .refresh-btn {
        min-width: 140px;
      }
      .progress {
        height: 20px;
        background-color: #2c3e50;
      }
      .progress-bar {
        line-height: 20px;
        font-size: 12px;
        font-weight: bold;
      }
      .metric-card {
        background: #23272f;
        border: 1px solid #404040;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 15px;
      }
      .metric-title {
        color: #fff;
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 10px;
      }
      .metric-value {
        color: #fff;
        font-size: 18px;
        font-weight: bold;
      }
      .metric-subtitle {
        color: #aaa;
        font-size: 12px;
      }
    </style>
  </head>
  <body>
    <%- include("../partials/navbar", { user, active }) %>
    <div class="container mt-5">
      <h2 class="mb-4 text-center">
        <i class="bi bi-server me-2"></i>VPS Resource Status
      </h2>
      
      <div class="d-flex justify-content-center mb-4">
        <button id="refreshBtn" class="btn btn-primary refresh-btn">
          <i class="bi bi-arrow-clockwise"></i> Refresh Status
        </button>
      </div>
      
      <div id="status-container" class="d-flex justify-content-center">
        <div class="w-100" style="max-width: 800px;">
          <!-- System Information -->
          <div class="card bg-dark text-white mb-4">
            <div class="card-header">
              <h5 class="mb-0"><i class="bi bi-info-circle me-2"></i>System Information</h5>
            </div>
            <div class="card-body">
              <div class="row">
                <div class="col-md-6">
                  <table class="table table-dark table-borderless mb-0">
                    <tbody>
                      <tr>
                        <td><strong>Hostname:</strong></td>
                        <td id="hostname">Loading...</td>
                      </tr>
                      <tr>
                        <td><strong>Platform:</strong></td>
                        <td id="platform">Loading...</td>
                      </tr>
                      <tr>
                        <td><strong>Architecture:</strong></td>
                        <td id="arch">Loading...</td>
                      </tr>
                    </tbody>
                  </table>
                </div>
                <div class="col-md-6">
                  <table class="table table-dark table-borderless mb-0">
                    <tbody>
                      <tr>
                        <td><strong>Node.js Version:</strong></td>
                        <td id="node-version">Loading...</td>
                      </tr>
                      <tr>
                        <td><strong>Uptime:</strong></td>
                        <td id="uptime">Loading...</td>
                      </tr>
                      <tr>
                        <td><strong>Temperature:</strong></td>
                        <td id="temperature">Loading...</td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>

          <!-- CPU Information -->
          <div class="card bg-dark text-white mb-4">
            <div class="card-header">
              <h5 class="mb-0"><i class="bi bi-cpu me-2"></i>CPU Information</h5>
            </div>
            <div class="card-body">
              <div class="row mb-3">
                <div class="col-md-6">
                  <strong>Model:</strong> <span id="cpu-model">Loading...</span>
                </div>
                <div class="col-md-6">
                  <strong>Cores:</strong> <span id="cpu-cores">Loading...</span>
                </div>
              </div>
              <div class="row">
                <div class="col-md-4">
                  <div class="metric-card">
                    <div class="metric-title">1 Minute Load</div>
                    <div class="metric-value" id="load-1min">Loading...</div>
                  </div>
                </div>
                <div class="col-md-4">
                  <div class="metric-card">
                    <div class="metric-title">5 Minute Load</div>
                    <div class="metric-value" id="load-5min">Loading...</div>
                  </div>
                </div>
                <div class="col-md-4">
                  <div class="metric-card">
                    <div class="metric-title">15 Minute Load</div>
                    <div class="metric-value" id="load-15min">Loading...</div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Memory Information -->
          <div class="card bg-dark text-white mb-4">
            <div class="card-header">
              <h5 class="mb-0"><i class="bi bi-memory me-2"></i>Memory Usage</h5>
            </div>
            <div class="card-body">
              <div class="row mb-3">
                <div class="col-md-3">
                  <strong>Total:</strong> <span id="mem-total">Loading...</span>
                </div>
                <div class="col-md-3">
                  <strong>Used:</strong> <span id="mem-used">Loading...</span>
                </div>
                <div class="col-md-3">
                  <strong>Free:</strong> <span id="mem-free">Loading...</span>
                </div>
                <div class="col-md-3">
                  <strong>Usage:</strong> <span id="mem-percent">Loading...</span>
                </div>
              </div>
              <div class="progress mb-3">
                <div id="mem-progress" class="progress-bar" role="progressbar" style="width: 0%">
                  0%
                </div>
              </div>
              
              <!-- SWAP Information -->
              <div class="mt-4">
                <h6 class="mb-3"><i class="bi bi-arrow-left-right me-2"></i>SWAP Usage</h6>
                <div class="row mb-3">
                  <div class="col-md-3">
                    <strong>Total:</strong> <span id="swap-total">Loading...</span>
                  </div>
                  <div class="col-md-3">
                    <strong>Used:</strong> <span id="swap-used">Loading...</span>
                  </div>
                  <div class="col-md-3">
                    <strong>Free:</strong> <span id="swap-free">Loading...</span>
                  </div>
                  <div class="col-md-3">
                    <strong>Usage:</strong> <span id="swap-percent">Loading...</span>
                  </div>
                </div>
                <div class="progress mb-2">
                  <div id="swap-progress" class="progress-bar" role="progressbar" style="width: 0%">
                    0%
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Disk Information -->
          <div class="card bg-dark text-white mb-4">
            <div class="card-header">
              <h5 class="mb-0"><i class="bi bi-hdd me-2"></i>Disk Usage</h5>
            </div>
            <div class="card-body">
              <div class="row mb-3">
                <div class="col-md-3">
                  <strong>Total:</strong> <span id="disk-total">Loading...</span>
                </div>
                <div class="col-md-3">
                  <strong>Used:</strong> <span id="disk-used">Loading...</span>
                </div>
                <div class="col-md-3">
                  <strong>Available:</strong> <span id="disk-available">Loading...</span>
                </div>
                <div class="col-md-3">
                  <strong>Usage:</strong> <span id="disk-percent">Loading...</span>
                </div>
              </div>
              <div class="progress mb-2">
                <div id="disk-progress" class="progress-bar" role="progressbar" style="width: 0%">
                  0%
                </div>
              </div>
            </div>
          </div>

          <!-- Network & Processes -->
          <div class="row">
            <div class="col-md-6">
              <div class="card bg-dark text-white mb-4">
                <div class="card-header">
                  <h5 class="mb-0"><i class="bi bi-wifi me-2"></i>Network Interfaces</h5>
                </div>
                <div class="card-body">
                  <div id="network-interfaces">Loading...</div>
                </div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="card bg-dark text-white mb-4">
                <div class="card-header">
                  <h5 class="mb-0"><i class="bi bi-list-ul me-2"></i>Processes</h5>
                </div>
                <div class="card-body">
                  <div class="metric-value" id="process-count">Loading...</div>
                  <div class="metric-subtitle">Active processes</div>
                </div>
              </div>
            </div>
          </div>

          <div class="text-center text-muted mt-4">
            <small>Last updated: <span id="last-updated">Never</span></small>
          </div>
        </div>
      </div>
    </div>
    <%- include("../partials/footer") %>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      async function fetchVPSStatus() {
        try {
          const response = await fetch('/vps-status/api');
          const data = await response.json();
          
          if (data.error) {
            throw new Error(data.error);
          }
          
          // Update system information
          document.getElementById('hostname').textContent = data.system.hostname;
          document.getElementById('platform').textContent = data.system.platform;
          document.getElementById('arch').textContent = data.system.arch;
          document.getElementById('node-version').textContent = data.system.nodeVersion;
          document.getElementById('uptime').textContent = data.system.uptime.formatted;
          document.getElementById('temperature').textContent = data.temperature;
          
          // Update CPU information
          document.getElementById('cpu-model').textContent = data.cpu.model;
          document.getElementById('cpu-cores').textContent = data.cpu.cores;
          document.getElementById('load-1min').textContent = data.cpu.loadAverage['1min'];
          document.getElementById('load-5min').textContent = data.cpu.loadAverage['5min'];
          document.getElementById('load-15min').textContent = data.cpu.loadAverage['15min'];
          
          // Update memory information
          document.getElementById('mem-total').textContent = data.memory.total;
          document.getElementById('mem-used').textContent = data.memory.used;
          document.getElementById('mem-free').textContent = data.memory.free;
          
          const memPercent = parseFloat(data.memory.usagePercent);
          document.getElementById('mem-percent').textContent = memPercent + '%';
          document.getElementById('mem-progress').style.width = memPercent + '%';
          document.getElementById('mem-progress').textContent = memPercent + '%';
          
                     // Update memory usage color
           const memPercentElement = document.getElementById('mem-percent');
           memPercentElement.className = '';
           if (memPercent > 80) {
             memPercentElement.classList.add('usage-high');
           } else if (memPercent > 60) {
             memPercentElement.classList.add('usage-medium');
           } else {
             memPercentElement.classList.add('usage-low');
           }
           
           // Update SWAP information
           if (data.swap.error) {
             document.getElementById('swap-total').textContent = 'Error';
             document.getElementById('swap-used').textContent = 'Error';
             document.getElementById('swap-free').textContent = 'Error';
             document.getElementById('swap-percent').textContent = 'Error';
             document.getElementById('swap-progress').style.width = '0%';
             document.getElementById('swap-progress').textContent = 'Error';
           } else {
             document.getElementById('swap-total').textContent = data.swap.total;
             document.getElementById('swap-used').textContent = data.swap.used;
             document.getElementById('swap-free').textContent = data.swap.free;
             document.getElementById('swap-percent').textContent = data.swap.usagePercent + '%';
             document.getElementById('swap-progress').style.width = data.swap.usagePercent + '%';
             document.getElementById('swap-progress').textContent = data.swap.usagePercent + '%';
             
             // Update SWAP usage color
             const swapPercent = parseFloat(data.swap.usagePercent);
             const swapPercentElement = document.getElementById('swap-percent');
             swapPercentElement.className = '';
             if (swapPercent > 80) {
               swapPercentElement.classList.add('usage-high');
             } else if (swapPercent > 60) {
               swapPercentElement.classList.add('usage-medium');
             } else {
               swapPercentElement.classList.add('usage-low');
             }
           }
          
          // Update disk information
          if (data.disk.error) {
            document.getElementById('disk-total').textContent = 'Error';
            document.getElementById('disk-used').textContent = 'Error';
            document.getElementById('disk-available').textContent = 'Error';
            document.getElementById('disk-percent').textContent = 'Error';
            document.getElementById('disk-progress').style.width = '0%';
            document.getElementById('disk-progress').textContent = 'Error';
          } else {
            document.getElementById('disk-total').textContent = data.disk.total;
            document.getElementById('disk-used').textContent = data.disk.used;
            document.getElementById('disk-available').textContent = data.disk.available;
            document.getElementById('disk-percent').textContent = data.disk.usagePercent + '%';
            document.getElementById('disk-progress').style.width = data.disk.usagePercent + '%';
            document.getElementById('disk-progress').textContent = data.disk.usagePercent + '%';
          }
          
          // Update network interfaces
          const networkElement = document.getElementById('network-interfaces');
          if (data.network.interfaces.length > 0) {
            networkElement.innerHTML = data.network.interfaces.map(iface => 
              `<div class="mb-1"><i class="bi bi-ethernet me-2"></i>${iface}</div>`
            ).join('');
          } else {
            networkElement.innerHTML = '<div class="text-muted">No network interfaces found</div>';
          }
          
          // Update process count
          document.getElementById('process-count').textContent = data.processes;
          
          // Update timestamp
          const timestamp = new Date(data.timestamp);
          document.getElementById('last-updated').textContent = timestamp.toLocaleString();
          
        } catch (error) {
          console.error('Error fetching VPS status:', error);
          document.getElementById('status-container').innerHTML = 
            '<div class="alert alert-danger">Failed to load VPS status. Please try again.</div>';
        }
      }
      
      // Initial load
      fetchVPSStatus();
      
      // Refresh button
      document.getElementById('refreshBtn').addEventListener('click', fetchVPSStatus);
      
      // Auto-refresh every 30 seconds
      setInterval(fetchVPSStatus, 30000);
    </script>
  </body>
</html> 