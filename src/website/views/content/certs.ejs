<!DOCTYPE html>
<html>
  <head>
    <title>Certifications</title>
    <meta content="1A Website" property="og:title" />
    <meta content="Welcome to 1A!" property="og:description" />
    <meta content="https://1a75.org/certs" property="og:url" />
    <meta content="https://cdn.xanderxx.xyz/1a-logo.png" property="og:image" />
    <meta content="#4b5a2a" data-react-helmet="true" name="theme-color" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link rel="icon" href="/favicon.ico" />
    <link rel="stylesheet" href="/custom.css" />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css"
    />
    <style>
      :root {
        --primary-gold: var(--ranger-gold, #e1b84c);
        --secondary-gold: var(--ranger-green, #4b5a2a);
        --dark-gold: var(--ranger-gold, #e1b84c);
        --deep-brown: var(--ranger-red, #b12a2c);
        --pure-black: var(--ranger-bg, #241d1d);
        --bg-gradient: linear-gradient(135deg, var(--ranger-bg, #241d1d) 0%, var(--ranger-footer, #291e1e) 100%);
        --card-bg: var(--ranger-card, #2d2d2d);
        --glass-bg: rgba(255, 255, 255, 0.1);
        --border-light: rgba(225, 184, 76, 0.3);
        --shadow-light: 0 8px 32px rgba(0, 0, 0, 0.1);
        --shadow-medium: 0 12px 40px rgba(0, 0, 0, 0.15);
        --shadow-heavy: 0 20px 60px rgba(0, 0, 0, 0.2);
      }

      body {
        background: var(--bg-gradient);
        min-height: 100vh;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        color: #ffffff;
      }

      .certs-container {
        padding: 1rem 0;
      }

      .certs-hero {
        background: var(--card-bg);
        border-radius: 24px;
        box-shadow: var(--shadow-heavy);
        overflow: hidden;
        border: 2px solid var(--ranger-gold);
        backdrop-filter: blur(20px);
        position: relative;
        margin-bottom: 3rem;
        padding: 2rem;
        text-align: center;
      }

      .certs-hero::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #FFD700, #DAA520, #B8860B);
      }

      .certs-title {
        font-size: 2.2rem;
        font-weight: 800;
        color: var(--primary-gold);
        margin-bottom: 0.5rem;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        line-height: 1.2;
      }

      .certs-subtitle {
        font-size: 1.1rem;
        color: #e0e0e0;
        opacity: 0.9;
        margin-bottom: 0;
        line-height: 1.6;
      }

      /* Section headers */
      .section-header {
        background: rgba(255, 255, 255, 0.05);
        border-radius: 16px;
        border: 1px solid var(--ranger-gold);
        padding: 1.5rem;
        margin-bottom: 2rem;
        box-shadow: var(--shadow-medium);
        position: relative;
        overflow: hidden;
      }

      .section-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: linear-gradient(90deg, #FFD700, #DAA520);
      }

      .section-title {
        font-size: 1.6rem;
        font-weight: 700;
        color: var(--primary-gold);
        margin-bottom: 0;
      }

      /* Category headers */
      .category-header {
        background: rgba(255, 255, 255, 0.05);
        border-radius: 16px;
        border: 1px solid var(--ranger-gold);
        padding: 1rem 1.5rem;
        margin-bottom: 1.5rem;
        box-shadow: var(--shadow-medium);
        position: relative;
        overflow: hidden;
        color: var(--primary-gold);
        font-weight: 700;
        font-size: 1.4rem;
      }

      .category-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: linear-gradient(90deg, #FFD700, #DAA520);
      }

      .category-header i {
        color: var(--primary-gold);
        margin-right: 0.5rem;
      }

      /* Cert cards */
      .cert-card {
        background: rgba(255, 255, 255, 0.05);
        border: 1px solid var(--ranger-gold);
        border-radius: 16px;
        transition: all 0.3s ease;
        box-shadow: var(--shadow-medium);
        margin-bottom: 1.5rem;
        position: relative;
        overflow: hidden;
      }

      .cert-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: linear-gradient(90deg, #FFD700, #DAA520);
        transform: scaleX(0);
        transition: transform 0.3s ease;
      }

      .cert-card:hover {
        background: rgba(255, 255, 255, 0.1);
        transform: translateY(-4px) scale(1.02);
        box-shadow: var(--shadow-heavy);
        border-color: var(--ranger-gold);
      }

      .cert-card:hover::before {
        transform: scaleX(1);
      }

      .cert-title h5 {
        color: var(--primary-gold);
        font-weight: 700;
        margin-bottom: 0.5rem;
        font-size: 1.2rem;
      }

      .cert-description {
        color: #e0e0e0;
        line-height: 1.6;
        margin-bottom: 0.5rem;
      }

      .cert-description.truncated {
        display: -webkit-box;
        -webkit-line-clamp: 3;
        line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
      }

      .expand-btn {
        background: none;
        border: none;
        color: var(--primary-gold);
        text-decoration: underline;
        cursor: pointer;
        padding: 0;
        font-size: 0.9rem;
        margin-top: 0.25rem;
        transition: color 0.3s ease;
      }

      .expand-btn:hover {
        color: var(--ranger-gold);
        text-decoration: none;
      }

      .cert-id {
        margin: 0.75rem 0;
        color: #e0e0e0;
      }

      .cert-id code {
        background: rgba(225, 184, 76, 0.2);
        color: var(--ranger-gold);
        padding: 0.1rem 0.3rem;
        border-radius: 4px;
        font-size: 0.85rem;
      }

      .cert-id .badge {
        background: var(--ranger-gold) !important;
        color: #000000;
        font-weight: 600;
      }

      /* Request button */
      .request-btn {
        font-size: 1.08rem;
        font-weight: 600;
        padding: 0.75rem 1.2rem;
        border-radius: 12px;
        box-shadow: var(--shadow-medium);
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        margin-top: 1rem;
        border: none;
        transition: all 0.3s ease;
        background: linear-gradient(135deg, #FFD700 0%, #DAA520 100%);
        color: #000000;
      }

      .request-btn:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-heavy);
        background: linear-gradient(135deg, #B8860B 0%, #FFD700 100%);
        color: #000000;
      }

      .request-btn:disabled {
        opacity: 0.7;
        transform: none;
        cursor: not-allowed;
      }

      .request-btn i {
        font-size: 1.2rem;
        margin-right: 0.5rem;
      }

      /* Status badges */
      .status-badge.bg-success {
        background: var(--ranger-green) !important;
        color: #ffffff;
      }

      .status-badge.bg-warning {
        background: var(--ranger-gold) !important;
        color: #000000;
      }

      /* Admin controls */
      .admin-controls {
        display: flex;
        gap: 0.5rem;
        margin-top: 1rem;
        flex-wrap: wrap;
      }

      /* No certs message */
      .no-certs {
        background: rgba(255, 255, 255, 0.05);
        border: 1px solid var(--ranger-gold);
        border-radius: 16px;
        padding: 2rem;
        text-align: center;
        color: #e0e0e0;
        box-shadow: var(--shadow-medium);
      }

      /* Animations */
      .fade-in {
        animation: fadeIn 0.8s ease-out;
      }

      .slide-in {
        animation: slideIn 0.6s ease-out;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(30px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      @keyframes slideIn {
        from {
          opacity: 0;
          transform: translateX(-40px);
        }
        to {
          opacity: 1;
          transform: translateX(0);
        }
      }

      /* Staggered card animations */
      .cert-card {
        animation: slideIn 0.6s ease-out;
        animation-fill-mode: both;
      }

      .cert-card:nth-child(1) { animation-delay: 0.1s; }
      .cert-card:nth-child(2) { animation-delay: 0.2s; }
      .cert-card:nth-child(3) { animation-delay: 0.3s; }
      .cert-card:nth-child(4) { animation-delay: 0.4s; }
      .cert-card:nth-child(5) { animation-delay: 0.5s; }
      .cert-card:nth-child(6) { animation-delay: 0.6s; }

      /* Responsive design */
      @media (max-width: 768px) {
        .certs-container {
          padding: 1rem 0;
        }

        .certs-hero {
          padding: 1.5rem;
          margin-bottom: 2rem;
        }

        .certs-title {
          font-size: 1.8rem;
        }

        .certs-subtitle {
          font-size: 1rem;
        }

        .section-header {
          padding: 1rem;
          margin-bottom: 1.5rem;
        }

        .section-title {
          font-size: 1.4rem;
        }

        .category-header {
          padding: 0.75rem 1rem;
          font-size: 1.2rem;
        }

        .cert-card {
          margin-bottom: 1rem;
        }

        .cert-title h5 {
          font-size: 1.1rem;
        }

        .admin-controls {
          flex-direction: column;
          gap: 0.4rem;
        }

        .admin-controls .btn {
          width: 100%;
        }
      }

      @media (max-width: 480px) {
        .certs-hero {
          padding: 1rem;
        }

        .certs-title {
          font-size: 1.6rem;
        }

        .section-header {
          padding: 0.75rem;
        }

        .category-header {
          padding: 0.5rem 0.75rem;
        }
      }
    </style>
  </head>
  <body>
    <%- include("../partials/navbar", { user, active }) %>
    <div id="main-content">
      <div class="container certs-container">
        <!-- Hero Section -->
        <div class="certs-hero fade-in">
          <h1 class="certs-title">
            <i class="bi bi-patch-check me-3"></i>
            Certification Center
          </h1>
          <p class="certs-subtitle">
            Professional development and specialized training certifications for 1A personnel advancement.
          </p>
        </div>

        <!-- Alert Messages -->
        <% if (alert) { %>
        <div class="alert alert-success alert-dismissible fade show" role="alert">
          <%= alert %>
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
        <% } %>
        <% if (error) { %>
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
          <%= error %>
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
        <% } %>

        <!-- Certifications Section -->
        <div class="section-header slide-in">
          <div class="d-flex justify-content-between align-items-center">
            <h2 class="section-title">
              <i class="bi bi-award me-2"></i>Available Certifications
            </h2>
            <% if (user && isAdmin) { %>
            <a href="/certs/new" class="btn btn-primary">
              <i class="bi bi-plus-circle me-2"></i>Create Certification
            </a>
            <% } %>
          </div>
        </div>
        <% if (certs.length === 0) { %>
        <div class="col-12">
          <div class="no-certs">
            <i class="bi bi-patch-exclamation display-4 mb-3" style="color: var(--ranger-gold);"></i>
            <h5>No certifications available yet</h5>
            <p class="mb-0">Check back later for professional development and training certifications.</p>
          </div>
        </div>
        <% } else { %>
          <% 
            // Group certifications by category
            const categories = {};
            certs.forEach(cert => {
              const category = cert.category || 'Uncategorized';
              if (!categories[category]) {
                categories[category] = [];
              }
              categories[category].push(cert);
            });
          %>
          
          <% Object.keys(categories).forEach(category => { %>
          <div class="col-12 mb-4">
            <h3 class="category-header">
              <i class="bi bi-collection me-2"></i><%= category %>
            </h3>
            <div class="row">
              <% categories[category].forEach((cert, index) => { 
                const req = userRequests.find(r => r.cert_id === cert.id && (r.status === 'pending' || r.status === 'approved')); 
                const description = cert.description || "No description provided."; 
              %>
              <div class="col-12 col-md-6 col-lg-4">
                <div class="card cert-card">
                  <div class="card-body p-3">
                    <div class="cert-title mb-2">
                      <h5><%= cert.name %></h5>
                      <% if (req) { %>
                      <span
                        class="badge status-badge <%= req.status === 'approved' ? 'bg-success' : 'bg-warning' %>"
                      >
                        <%= req.status.charAt(0).toUpperCase() + req.status.slice(1) %>
                      </span>
                      <% } %>
                    </div>
                    <div class="cert-meta mb-1">
                      <div
                        class="cert-description truncated"
                        id="cert-desc-<%= category.replace(/\s+/g, '-') %>-<%= index %>"
                      >
                        <%= description %>
                      </div>
                      <button
                        class="expand-btn"
                        onclick="toggleDescription('<%= category.replace(/\s+/g, '-') %>-<%= index %>')"
                        id="expand-btn-<%= category.replace(/\s+/g, '-') %>-<%= index %>"
                      >
                        Show more
                      </button>
                    </div>
                    <div class="cert-id mb-2">
                      <small>Cert ID: <code><%= cert.id %></code></small>
                      <% if (cert.required_mos) { %>
                      <br /><small style="color: #e0e0e0; opacity: 0.8;">Required MOS (any of):
                        <% 
                          let mosDisplay = []; 
                          try { 
                            const mosArray = JSON.parse(cert.required_mos); 
                            mosDisplay = Array.isArray(mosArray) ? mosArray : [cert.required_mos]; 
                          } catch(e) { 
                            mosDisplay = [cert.required_mos]; 
                          } 
                        %>
                        <% mosDisplay.forEach((mos, index) => { %>
                        <span class="badge me-1"><%= mos %></span>
                        <% }); %>
                      </small>
                      <% } %>
                    </div>
                    <% if (user && isAdmin) { %>
                    <div class="admin-controls">
                      <a
                        href="/certs/edit/<%= cert.id %>"
                        class="btn btn-sm btn-outline-primary"
                      >
                        <i class="bi bi-pencil-square me-1"></i>Edit
                      </a>
                      <form
                        action="/certs/delete/<%= cert.id %>"
                        method="POST"
                        style="display: inline"
                        onsubmit="return confirm('Delete this certification?');"
                      >
                        <button type="submit" class="btn btn-sm btn-outline-danger">
                          <i class="bi bi-trash me-1"></i>Delete
                        </button>
                      </form>
                    </div>
                    <% } %>
                    <% if (user && !req) { %>
                    <button 
                      class="request-btn"
                      onclick="requestCertification('<%= cert.id %>', '<%= cert.name %>')"
                      id="request-btn-<%= cert.id %>"
                    >
                      <i class="bi bi-patch-check me-2"></i>Request
                    </button>
                    <% } %>
                  </div>
                </div>
              </div>
              <% }); %>
            </div>
          </div>
          <% }); %>
        <% } %>
      </div>
    </div>
    <%- include("../partials/footer") %>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css"
    />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      function toggleDescription(id) {
        const description = document.getElementById('cert-desc-' + id);
        const button = document.getElementById('expand-btn-' + id);

        if (description.classList.contains('truncated')) {
          description.classList.remove('truncated');
          button.textContent = 'Show less';
        } else {
          description.classList.add('truncated');
          button.textContent = 'Show more';
        }
      }

      async function requestCertification(certId, certName) {
        const button = document.getElementById('request-btn-' + certId);
        const originalText = button.innerHTML;
        
        // Disable button and show loading state
        button.disabled = true;
        button.innerHTML = '<i class="bi bi-hourglass-split me-2"></i> Requesting...';
        
        try {
          const response = await fetch('/certs/api/request-cert', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              certId: certId,
              certName: certName
            })
          });

          const result = await response.json();
          
          if (result.success) {
            // Update button to show requested state
            button.innerHTML = '<i class="bi bi-check-circle me-2"></i> Requested';
            button.className = 'btn btn-secondary request-btn';
            button.disabled = true;
            
            // Show success message
            showAlert('Certification requested successfully!', 'success');
          } else {
            throw new Error(result.error || 'Failed to request certification');
          }
        } catch (error) {
          console.error('Error requesting certification:', error);
          
          // Re-enable button and restore original text
          button.disabled = false;
          button.innerHTML = originalText;
          
          // Show error message
          showAlert(error.message || 'Failed to request certification. Please try again.', 'danger');
        }
      }

      function showAlert(message, type) {
        // Remove any existing alerts
        const existingAlert = document.querySelector('.alert');
        if (existingAlert) {
          existingAlert.remove();
        }

        // Create new alert
        const alertDiv = document.createElement('div');
        alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
        alertDiv.innerHTML = `
          ${message}
          <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;

        // Insert alert at the top of the main content
        const mainContent = document.getElementById('main-content');
        const container = mainContent.querySelector('.container');
        container.insertBefore(alertDiv, container.firstChild);

        // Auto-dismiss after 5 seconds
        setTimeout(() => {
          if (alertDiv.parentNode) {
            alertDiv.remove();
          }
        }, 5000);
      }
    </script>
  </body>
</html>
