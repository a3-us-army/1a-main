<!DOCTYPE html>
<html>
  <head>
    <title>Certifications</title>
    <meta content="1A Website" property="og:title" />
    <meta content="Welcome to 1A!" property="og:description" />
    <meta content="https://1a75.org/certs" property="og:url" />
    <meta content="https://cdn.xanderxx.xyz/1a-logo.png" property="og:image" />
    <meta content="#4b5a2a" data-react-helmet="true" name="theme-color" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link rel="icon" href="/favicon.ico" />
    <link rel="stylesheet" href="/custom.css" />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css"
    />
    <style>
      @media (max-width: 600px) {
        .card.cert-card {
          padding: 0.5rem;
          margin: 0 0.2rem;
        }
        .cert-title {
          font-size: 1.1rem;
        }
        .cert-meta,
        .cert-id {
          font-size: 0.97rem;
        }
        .d-flex.flex-wrap.gap-2 {
          flex-direction: column !important;
          gap: 0.4rem !important;
        }
        .btn,
        .btn-sm {
          width: 100%;
        }
        .btn + .btn,
        form + form {
          margin-left: 0 !important;
        }
        .d-flex.justify-content-between.align-items-center.mb-3 {
          flex-direction: column !important;
          align-items: stretch !important;
          gap: 0.7rem;
        }
        h1.fw-bold {
          font-size: 1.15rem !important;
          text-align: center;
        }
      }
      .request-btn {
        font-size: 1.08rem;
        font-weight: 600;
        padding: 0.7rem 1.2rem;
        border-radius: 0.5rem;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        margin-top: 0.7rem;
      }
      .request-btn i {
        font-size: 1.2rem;
        margin-right: 0.5rem;
      }
      .cert-description {
        line-height: 1.5;
        margin-bottom: 0.5rem;
      }
      .cert-description.truncated {
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
      }
      .expand-btn {
        background: none;
        border: none;
        color: #007bff;
        text-decoration: underline;
        cursor: pointer;
        padding: 0;
        font-size: 0.9rem;
        margin-top: 0.25rem;
      }
      .expand-btn:hover {
        color: #0056b3;
      }
      .category-header {
        color: #4b5a2a;
        border-bottom: 2px solid #4b5a2a;
        padding-bottom: 0.5rem;
        margin-bottom: 1.5rem;
        font-weight: 600;
      }
      .category-header i {
        color: #b68900;
      }
    </style>
  </head>
  <body>
    <%- include("../partials/navbar", { user, active }) %>
    <div id="main-content">
      <div class="container mt-3">
        <% if (alert) { %>
        <div class="alert alert-success"><%= alert %></div>
        <% } %>
        <% if (error) { %>
        <div class="alert alert-danger"><%= error %></div>
        <% } %>
        <div class="d-flex justify-content-between align-items-center mb-3">
          <h1 class="fw-bold" style="font-size: 1.4rem">Certifications</h1>
          <% if (user && isAdmin) { %>
          <a
            href="/certs/new"
            class="btn btn-primary shadow px-3 py-1"
            style="font-size: 1rem"
            >+ Create Certification</a
          >
          <% } %>
        </div>
        <% if (certs.length === 0) { %>
        <div class="col-12">
          <div class="alert alert-info text-center">
            No certifications available yet.
          </div>
        </div>
        <% } else { %>
          <% 
            // Group certifications by category
            const categories = {};
            certs.forEach(cert => {
              const category = cert.category || 'Uncategorized';
              if (!categories[category]) {
                categories[category] = [];
              }
              categories[category].push(cert);
            });
          %>
          
          <% Object.keys(categories).forEach(category => { %>
          <div class="col-12 mb-4">
            <h3 class="fw-bold mb-3 category-header">
              <i class="bi bi-collection me-2"></i><%= category %>
            </h3>
            <div class="row">
              <% categories[category].forEach((cert, index) => { 
                const req = userRequests.find(r => r.cert_id === cert.id && (r.status === 'pending' || r.status === 'approved')); 
                const description = cert.description || "No description provided."; 
              %>
              <div class="col-12 col-md-6 col-lg-4">
                <div class="card cert-card shadow-sm mb-3">
                  <div class="card-body p-3">
                    <div class="cert-title mb-2">
                      <h5><%= cert.name %></h5>
                      <% if (req) { %>
                      <span
                        class="badge status-badge <%= req.status === 'approved' ? 'bg-success' : 'bg-warning text-dark' %>"
                      >
                        <%= req.status.charAt(0).toUpperCase() + req.status.slice(1) %>
                      </span>
                      <% } %>
                    </div>
                    <div class="cert-meta mb-1">
                      <div
                        class="cert-description truncated"
                        id="cert-desc-<%= category.replace(/\s+/g, '-') %>-<%= index %>"
                      >
                        <%= description %>
                      </div>
                      <button
                        class="expand-btn"
                        onclick="toggleDescription('<%= category.replace(/\s+/g, '-') %>-<%= index %>')"
                        id="expand-btn-<%= category.replace(/\s+/g, '-') %>-<%= index %>"
                      >
                        Show more
                      </button>
                    </div>
                    <div class="cert-id mb-2">
                      <small
                        >Cert ID: <code><%= cert.id %></code></small
                      >
                      <% if (cert.required_mos) { %>
                      <br /><small class="text-muted"
                        >Required MOS:
                        <% 
                          let mosDisplay = []; 
                          try { 
                            const mosArray = JSON.parse(cert.required_mos); 
                            mosDisplay = Array.isArray(mosArray) ? mosArray : [cert.required_mos]; 
                          } catch(e) { 
                            mosDisplay = [cert.required_mos]; 
                          } 
                        %>
                        <% mosDisplay.forEach((mos, index) => { %>
                        <span class="badge bg-secondary me-1"><%= mos %></span>
                        <% }); %>
                      </small>
                      <% } %>
                    </div>
                    <% if (user && isAdmin) { %>
                    <div class="d-flex flex-wrap gap-2">
                      <a
                        href="/certs/edit/<%= cert.id %>"
                        class="btn btn-sm btn-primary d-flex align-items-center"
                        style="font-weight: 500"
                      >
                        <i class="bi bi-pencil-square me-1"></i> Edit
                      </a>
                      <form
                        action="/certs/delete/<%= cert.id %>"
                        method="POST"
                        style="display: inline"
                        onsubmit="return confirm('Delete this certification?');"
                      >
                        <button type="submit" class="btn btn-sm btn-outline-danger">
                          Delete
                        </button>
                      </form>
                    </div>
                    <% } %>
                    <% if (user && !req) { %>
                    <button 
                      class="btn btn-success request-btn"
                      onclick="requestCertification('<%= cert.id %>', '<%= cert.name %>')"
                      id="request-btn-<%= cert.id %>"
                    >
                      <i class="bi bi-patch-check me-2"></i> Request
                    </button>
                    <% } %>
                  </div>
                </div>
              </div>
              <% }); %>
            </div>
          </div>
          <% }); %>
        <% } %>
      </div>
    </div>
    <%- include("../partials/footer") %>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css"
    />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      function toggleDescription(id) {
        const description = document.getElementById('cert-desc-' + id);
        const button = document.getElementById('expand-btn-' + id);

        if (description.classList.contains('truncated')) {
          description.classList.remove('truncated');
          button.textContent = 'Show less';
        } else {
          description.classList.add('truncated');
          button.textContent = 'Show more';
        }
      }

      async function requestCertification(certId, certName) {
        const button = document.getElementById('request-btn-' + certId);
        const originalText = button.innerHTML;
        
        // Disable button and show loading state
        button.disabled = true;
        button.innerHTML = '<i class="bi bi-hourglass-split me-2"></i> Requesting...';
        
        try {
          const response = await fetch('/certs/api/request-cert', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              certId: certId,
              certName: certName
            })
          });

          const result = await response.json();
          
          if (result.success) {
            // Update button to show requested state
            button.innerHTML = '<i class="bi bi-check-circle me-2"></i> Requested';
            button.className = 'btn btn-secondary request-btn';
            button.disabled = true;
            
            // Show success message
            showAlert('Certification requested successfully!', 'success');
          } else {
            throw new Error(result.error || 'Failed to request certification');
          }
        } catch (error) {
          console.error('Error requesting certification:', error);
          
          // Re-enable button and restore original text
          button.disabled = false;
          button.innerHTML = originalText;
          
          // Show error message
          showAlert(error.message || 'Failed to request certification. Please try again.', 'danger');
        }
      }

      function showAlert(message, type) {
        // Remove any existing alerts
        const existingAlert = document.querySelector('.alert');
        if (existingAlert) {
          existingAlert.remove();
        }

        // Create new alert
        const alertDiv = document.createElement('div');
        alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
        alertDiv.innerHTML = `
          ${message}
          <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;

        // Insert alert at the top of the main content
        const mainContent = document.getElementById('main-content');
        const container = mainContent.querySelector('.container');
        container.insertBefore(alertDiv, container.firstChild);

        // Auto-dismiss after 5 seconds
        setTimeout(() => {
          if (alertDiv.parentNode) {
            alertDiv.remove();
          }
        }, 5000);
      }
    </script>
  </body>
</html>
